<ResourceDictionary xmlns="http://xamarin.com/schemas/2014/forms"
                    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml">
    <Color x:Key="BackgroundColorDark">#111111</Color>
    <Color x:Key="BackgroundColorLight">#ffffff</Color>
    <Color x:Key="TextColorDark">#ffffff</Color>
    <Color x:Key="TextColorLight">#000000</Color>

    <Color x:Key="HeaderBarBackgroundColorLight">#aa00c7</Color>
    <Color x:Key="HeaderBarBackgroundColorDark">#aa00c7</Color>
    <Color x:Key="HeaderBarTextColorLight">#FFFFFF</Color>
    <Color x:Key="HeaderBarTextColorDark">#FFFFFF</Color>

    <Color x:Key="TabBarBackgroundColorDark">#444</Color>
    <Color x:Key="TabBarBackgroundColorLight">#eee</Color>

    <Color x:Key="ButtonBackgroundColorLight">#9b00ff</Color>
    <Color x:Key="ButtonBackgroundColorDark">#9b00ff</Color>
    <Color x:Key="ButtonBackgroundDisabledColorLight">#332196F3</Color>
    <Color x:Key="ButtonBackgroundDisabledColorDark">#332196F3</Color>
    <Color x:Key="ButtonTextColorLight">#FFFFFF</Color>
    <Color x:Key="ButtonTextColorDark">#FFFFFF</Color>


    <Color x:Key="AccentColorLight">#fa1fff</Color>
    <Color x:Key="AccentColorDark">#fa1fff</Color>


    <Color x:Key="PrimaryBackgroundDark">#9a15a6</Color>
    <Color x:Key="PrimaryBackgroundLight">#9a15a6</Color>
    <Color x:Key="PrimaryTextDark">#ffffff</Color>
    <Color x:Key="PrimaryTextLight">#ffffff</Color>


    <Style TargetType="Button">
        <Setter Property="TextColor" 
            Value="{AppThemeBinding Dark={StaticResource ButtonTextColorDark}, 
                        Light={StaticResource ButtonTextColorLight}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" 
                                Value="{AppThemeBinding Dark={StaticResource ButtonBackgroundColorDark}, 
                        Light={StaticResource ButtonBackgroundColorLight}}"  />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" 
                                Value="{AppThemeBinding Dark={StaticResource ButtonBackgroundDisabledColorDark}, 
                        Light={StaticResource ButtonBackgroundDisabledColorLight}}"  />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="SearchBar">
        <Setter Property="TextColor" 
             Value="{AppThemeBinding Dark={StaticResource ButtonTextColorDark}, 
             Light={StaticResource ButtonTextColorLight}}" />

        <Setter Property="CancelButtonColor" 
             Value="{AppThemeBinding Dark={StaticResource ButtonTextColorDark}, 
             Light={StaticResource ButtonTextColorLight}}" />
        <Setter Property="PlaceholderColor" 
             Value="{AppThemeBinding Dark={StaticResource ButtonTextColorDark}, 
             Light={StaticResource ButtonTextColorLight}}" />
        <Setter Property="BackgroundColor" Value="Transparent"/>
    </Style>

    <Style TargetType="ContentPage">
        <Setter Property="BackgroundColor"
            Value="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, 
                        Light={StaticResource BackgroundColorLight}}" />
    </Style>
    <Style TargetType="Grid">
        <Setter Property="BackgroundColor"
            Value="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, 
                        Light={StaticResource BackgroundColorLight}}" />
    </Style>
    <Style TargetType="StackLayout">
        <Setter Property="BackgroundColor"
            Value="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, 
                        Light={StaticResource BackgroundColorLight}}" />
    </Style>
    <Style TargetType="RefreshView">
        <Setter Property="BackgroundColor"
            Value="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, 
                        Light={StaticResource BackgroundColorLight}}" />
        <Setter Property="RefreshColor"
                Value="{AppThemeBinding Dark={StaticResource TextColorDark}, 
                    Light={StaticResource TextColorLight}}"/>
    </Style>


    <Style x:Key="BaseStyle" TargetType="Element">
        <Setter Property="Shell.BackgroundColor" 
            Value="{AppThemeBinding Dark={StaticResource HeaderBarBackgroundColorDark}, 
                        Light={StaticResource HeaderBarBackgroundColorLight}}" />
        <Setter Property="Shell.ForegroundColor" 
            Value="{AppThemeBinding Dark={StaticResource HeaderBarTextColorDark}, 
                        Light={StaticResource HeaderBarTextColorLight}}" />
        <Setter Property="Shell.TitleColor" Value="{AppThemeBinding Dark={StaticResource HeaderBarTextColorDark}, 
                        Light={StaticResource HeaderBarTextColorLight}}"/>
        <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
        <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
        <Setter Property="Shell.TabBarBackgroundColor"
            Value="{AppThemeBinding Dark={StaticResource TabBarBackgroundColorDark}, 
                        Light={StaticResource TabBarBackgroundColorLight}}"/>
        <Setter Property="Shell.TabBarForegroundColor" 
            Value="{AppThemeBinding Dark={StaticResource TextColorDark}, 
                        Light={StaticResource TextColorLight}}"/>
        <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
        <Setter Property="Shell.TabBarTitleColor" 
            Value="{AppThemeBinding Dark={StaticResource HeaderBarTextColorDark}, 
                        Light={StaticResource HeaderBarTextColorLight}}"/>
    </Style>
    <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
    <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

    <!--
Default Styles for all Flyout Items
https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
-->
    <Style Class="FlyoutItemLabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource HeaderBarTextColorDark}, 
            Light={StaticResource HeaderBarTextColorLight}}"></Setter>
    </Style>
    <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" 
                                Value="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, 
                        Light={StaticResource BackgroundColorLight}}" />
                            <Setter TargetName="FlyoutItemLabel" 
                                Property="Label.TextColor" 
                                Value="{AppThemeBinding Dark={StaticResource TextColorDark}, 
                        Light={StaticResource TextColorLight}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Selected">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" 
                                Value="{AppThemeBinding Dark={StaticResource PrimaryBackgroundDark}, 
                        Light={StaticResource PrimaryBackgroundLight}}"/>
                            <Setter TargetName="FlyoutItemLabel" 
                                Property="Label.TextColor" 
                                Value="{AppThemeBinding Dark={StaticResource PrimaryTextDark}, 
                        Light={StaticResource PrimaryTextLight}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!--
Custom Style you can apply to any Flyout Item
-->
    <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter TargetName="FlyoutItemLabel" 
                                Property="Label.TextColor" 
                                Value="{AppThemeBinding Dark={StaticResource TextColorDark}, 
                        Light={StaticResource TextColorLight}}"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
</ResourceDictionary>